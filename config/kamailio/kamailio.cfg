#!KAMAILIO

#!define WITH_MYSQL
#!define WITH_AUTH
#!define WITH_USRLOCDB

# 데이터베이스 URL 설정 - MariaDB 연결
#!define DBURL "mysql://kamailio:kamailiorw@mariadb/kamailio"

# SIP 도메인 설정
#!define SIP_DOMAIN "sip.example.com"

####### 글로벌 파라미터 #########
debug=2
log_stderror=yes
log_facility=LOG_LOCAL0
fork=yes
children=4

# UDP 프로토콜 설정
listen=udp:0.0.0.0:5060
# TCP 프로토콜 설정 
listen=tcp:0.0.0.0:5060
# TLS 프로토콜 설정
#listen=tls:0.0.0.0:5061

# 모듈 로드
loadmodule "jsonrpcs.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "siputils.so"
loadmodule "xlog.so"
loadmodule "sanity.so"
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
loadmodule "acc.so"
loadmodule "auth.so"
loadmodule "auth_db.so"
loadmodule "dispatcher.so"
loadmodule "db_mysql.so"
loadmodule "htable.so"
loadmodule "uac.so"
loadmodule "dialog.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "sqlops.so"
loadmodule "avpops.so"
loadmodule "permissions.so"

# 모듈 파라미터 설정
modparam("jsonrpcs", "pretty_format", 1)

# MySQL 데이터베이스 연결 설정
modparam("db_mysql", "ping_interval", 3)
modparam("db_mysql", "auto_reconnect", 1)
modparam("db_mysql", "timeout_interval", 2)
modparam("db_mysql", "retries", 3)

# 위치 서비스 설정
modparam("usrloc", "db_url", DBURL)
modparam("usrloc", "db_mode", 2)
modparam("usrloc", "use_domain", 1)

# 인증 설정
modparam("auth_db", "db_url", DBURL)
modparam("auth_db", "calculate_ha1", 1)
modparam("auth_db", "password_column", "password")
modparam("auth_db", "load_credentials", "")
modparam("auth_db", "use_domain", 1)

# ACC 모듈 설정
modparam("acc", "db_url", DBURL)
modparam("acc", "db_flag", 1)
modparam("acc", "db_missed_flag", 2)

# 메인 라우팅 로직
request_route {
    # 최대 전달 확인
    if (!mf_process_maxfwd_header("10")) {
        sl_send_reply("483", "Too Many Hops");
        exit;
    }

    # 요청 sanity 확인
    if (!sanity_check("1511", "7")) {
        xlog("Malformed SIP message from $si:$sp\n");
        exit;
    }

    # CANCEL 처리
    if (is_method("CANCEL")) {
        if (t_check_trans()) {
            t_relay();
        }
        exit;
    }

    # REGISTER 요청 처리
    if (is_method("REGISTER")) {
        # 인증 확인
        if (!auth_check("$fd", "subscriber", "1")) {
            auth_challenge("$fd", "0");
            exit;
        }
        
        # 위치 정보 저장
        if (!save("location")) {
            sl_reply_error();
        }
        exit;
    }

    # Record-Route 헤더 추가
    if (is_method("INVITE|SUBSCRIBE")) {
        record_route();
    }

    # 경로 처리
    if (has_totag()) {
        if (loose_route()) {
            if (is_method("BYE")) {
                xlog("BYE received\n");
            } else if (is_method("INVITE")) {
                xlog("Re-INVITE received\n");
            }
            route(RELAY);
        } else {
            if (is_method("ACK")) {
                if (t_check_trans()) {
                    t_relay();
                    exit;
                }
            }
            sl_send_reply("404", "Not here");
        }
        exit;
    }

    # INVITE 요청 처리
    if (is_method("INVITE")) {
        # 인증 확인
        if (!auth_check("$fd", "subscriber", "1")) {
            auth_challenge("$fd", "0");
            exit;
        }
        
        route(RELAY);
        exit;
    }

    # 기본 처리
    if (uri==myself) {
        if (!lookup("location")) {
            sl_send_reply("404", "Not Found");
            exit;
        }
    }
    
    route(RELAY);
}

# 릴레이 라우팅
route[RELAY] {
    if (!t_relay()) {
        sl_reply_error();
    }
    exit;
}
